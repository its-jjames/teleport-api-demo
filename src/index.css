@import "tailwindcss";
@import "@fontsource-variable/inter";

/* ------------------------------------------------------------
   1) theme tokens (light + dark)
------------------------------------------------------------ */
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 47.4% 11.2%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 47.4% 11.2%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --ring: 215 20.2% 65.1%;
    --radius: 0.75rem;
    --radix-accordion-content-height: 0px;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --ring: 217.2 32.6% 17.5%;
  }

  html {
    font-family: "InterVariable", ui-sans-serif, system-ui, -apple-system,
    Segoe UI, Roboto, "Helvetica Neue", Arial, "Noto Sans",
    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  }

  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    @apply antialiased;
  }
}

/* ------------------------------------------------------------
   2) utility mappings (make shadcn classes work in v4 config-less)
------------------------------------------------------------ */
@layer utilities {
  /* base background / text */
  .bg-background { background-color: hsl(var(--background)); }
  .text-foreground { color: hsl(var(--foreground)); }

  .bg-card { background-color: hsl(var(--card)); }
  .text-card-foreground { color: hsl(var(--card-foreground)); }

  .bg-popover { background-color: hsl(var(--popover)); }
  .text-popover-foreground { color: hsl(var(--popover-foreground)); }

  .bg-muted { background-color: hsl(var(--muted)); }
  .text-muted-foreground { color: hsl(var(--muted-foreground)); }

  /* borders */
  .border-border { border-color: hsl(var(--border)); }
  .border-input  { border-color: hsl(var(--input)); }
  .border-primary { border-color: hsl(var(--primary)); }
  .border-ring { border-color: hsl(var(--ring)); }
  .border-muted-foreground\/20 { border-color: hsl(var(--muted-foreground) / 0.2); }

  /* brand colors */
  .bg-primary { background-color: hsl(var(--primary)); }
  .text-primary-foreground { color: hsl(var(--primary-foreground)); }

  .bg-secondary { background-color: hsl(var(--secondary)); }
  .text-secondary-foreground { color: hsl(var(--secondary-foreground)); }

  .bg-accent { background-color: hsl(var(--accent)); }
  .text-accent-foreground { color: hsl(var(--accent-foreground)); }

  .bg-destructive { background-color: hsl(var(--destructive)); }
  .text-destructive { color: hsl(var(--destructive)); }
  .text-destructive-foreground { color: hsl(var(--destructive-foreground)); }

  /* rings */
  .ring-ring { --tw-ring-color: hsl(var(--ring)); }
  .ring-offset-background { --tw-ring-offset-color: hsl(var(--background)); }

  /* fills (icons, radios) */
  .fill-primary { fill: hsl(var(--primary)); }

  /* shadows (shadcn uses shadow-xs) */
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    box-shadow:
            var(--tw-ring-offset-shadow, 0 0 #0000),
            var(--tw-ring-shadow, 0 0 #0000),
            var(--tw-shadow);
  }

  /* opacity variants actually used by your components */
  .bg-background\/80 { background-color: hsl(var(--background) / 0.8); }
  .bg-primary\/5     { background-color: hsl(var(--primary) / 0.05); }
  .bg-primary\/20    { background-color: hsl(var(--primary) / 0.20); }
  .bg-secondary\/80  { background-color: hsl(var(--secondary) / 0.8); }
  .bg-muted\/30      { background-color: hsl(var(--muted) / 0.30); }
  .bg-input          { background-color: hsl(var(--input)); }
  .bg-input\/30      { background-color: hsl(var(--input) / 0.30); }
  .bg-input\/80      { background-color: hsl(var(--input) / 0.80); }

  .ring-primary\/30  { --tw-ring-color: hsl(var(--primary) / 0.30); }
  .ring-ring\/50     { --tw-ring-color: hsl(var(--ring) / 0.50); }
  .ring-destructive\/20 { --tw-ring-color: hsl(var(--destructive) / 0.20); }
  .ring-destructive\/40 { --tw-ring-color: hsl(var(--destructive) / 0.40); }

  .text-destructive\/90 { color: hsl(var(--destructive) / 0.90); }

  .bg-border { background-color: hsl(var(--border)); }  /* needed by <Separator> */
  .bg-ring { background-color: hsl(var(--ring)); }      /* rare, used by some focus states */

}

/* ------------------------------------------------------------
   3) accordion animations (used by AccordionContent)
------------------------------------------------------------ */
@layer utilities {
  @supports (height: var(--radix-accordion-content-height)) {
    @keyframes accordion-down {
      from { height: 0 }
      to   { height: var(--radix-accordion-content-height) }
    }
    @keyframes accordion-up {
      from { height: var(--radix-accordion-content-height) }
      to   { height: 0 }
    }
    .animate-accordion-down { animation: accordion-down 0.2s ease-out both }
    .animate-accordion-up   { animation: accordion-up   0.2s ease-out both }
  }
}
